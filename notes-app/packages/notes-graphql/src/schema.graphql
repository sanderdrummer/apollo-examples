type Note {
  id: ID!
  text: String!
  created: String!
}

type NotesForPolling {
  id: ID!
  pollingText: String!
  created: String!
}

type NoteWithoutId {
  text: String!
  created: String!
}

type NoteWithNesting {
  id: ID!
  text: String!
  avatar: Avatar!
  User: User!
  NoteDetails: [NoteDetails!]!
}

type Avatar {
  id: ID!
  url: String!
  name: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
}

type NoteDetails {
  id: ID!
  headline: String!
  subheadline: String!
  details: String!
}

type Query {
  notesWithNesting: [NoteWithNesting!]!
  notes: [Note]
  noteById(id: ID!): Note!
  noteWithoutId: NoteWithoutId
  notesForPolling: [NotesForPolling]
}

input NoteInput {
  id: ID
  text: String!
  created: String!
}

input NoteWithoutIdInput {
  text: String!
  created: String!
}

type Mutation {
  saveNote(note: NoteInput!): Note!
  saveNoteWithoutId(note: NoteWithoutIdInput): NoteWithoutId!
}
